declare A
@propertyReactive
  a1 : int
  a2 : int
end

declare B
@propertyReactive
  b1 : int
  b2 : int
end

declare C
@propertyReactive
  c1 : int
  c2 : int
end

declare D
@propertyReactive
  d1 : int
  d2 : int
end

declare E
@propertyReactive
  e1 : int
  e2 : int
end

declare F
@propertyReactive
  f1 : int
  f2 : int
end

declare G
@propertyReactive
  g1 : int
  g2 : int
end

declare H
@propertyReactive
  h1 : int
  h2 : int
end

declare I
@propertyReactive
  i1 : int
  i2 : int
end

rule Init salience 100
when
then
    for (int i = 0; i < 1000000; i++) {
        insert( new A(1, 1) );
    }
    insert( new B(0, 2) );
    insert( new C(-1, 2) );
    insert( new D(-2, 2) );
    insert( new E(-3, 2) );
    insert( new F(-4, 2) );
    insert( new G(-5, 2) );
    insert( new H(-6, 2) );
    insert( new I(-7, 2) );
end

rule R1
when
    $a: A( a1 < 10 )
    $b: B( b1 < $a.a1 )
    $c: C( c1 < $b.b1 )
    $d: D( d1 < $c.c1 )
    $e: E( e1 < $d.d1 )
    $f: F( f1 < $e.e1 )
    $g: G( g1 < $f.f1 )
    $h: H( h1 < $g.g1 )
    $i: I( i1 < $h.h1 )
then
    modify( $a ) { setA2( $i.getI2() + 1 ) };
end
